/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/wAdxEUEb36f
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card"
import { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from "@/components/ui/table"

export function Componente() {
  const [expenses, setExpenses] = useState([
    {
      id: 1,
      date: "2023-06-01",
      amount: 15.99,
      description: "Groceries",
      category: "Food",
    },
    {
      id: 2,
      date: "2023-06-05",
      amount: 79.5,
      description: "Car Repair",
      category: "Auto",
    },
    {
      id: 3,
      date: "2023-06-10",
      amount: 25.0,
      description: "Lunch Meeting",
      category: "Food",
    },
    {
      id: 4,
      date: "2023-06-15",
      amount: 89.27,
      description: "Diesel",
      category: "Fuel",
    },
    {
      id: 5,
      date: "2023-06-20",
      amount: 12.75,
      description: "Coffee",
      category: "Food",
    },
  ])
  const [totalExpenses, setTotalExpenses] = useState(expenses.reduce((total, expense) => total + expense.amount, 0))
  const [activeFilter, setActiveFilter] = useState("all")
  const filteredExpenses = useMemo(() => {
    switch (activeFilter) {
      case "food":
        return expenses.filter((expense) => expense.category === "Food")
      case "auto":
        return expenses.filter((expense) => expense.category === "Auto")
      case "fuel":
        return expenses.filter((expense) => expense.category === "Fuel")
      default:
        return expenses
    }
  }, [activeFilter, expenses])
  return (
    <div className="flex min-h-screen w-full bg-background">
      <aside className="hidden w-64 flex-col border-r bg-card p-6 md:flex">
        <div className="mb-6 text-2xl font-bold">:👇:</div>
        <nav className="flex flex-col gap-2">
          <Button variant={activeFilter === "all" ? "secondary" : "ghost"} onClick={() => setActiveFilter("all")}>
          ⚜️All Expenses
          </Button>
          <Button variant={activeFilter === "food" ? "secondary" : "ghost"} onClick={() => setActiveFilter("food")}>
            Food🥣
          </Button>
          <Button variant={activeFilter === "auto" ? "secondary" : "ghost"} onClick={() => setActiveFilter("auto")}>
            Auto🚗
          </Button>
          <Button variant={activeFilter === "fuel" ? "secondary" : "ghost"} onClick={() => setActiveFilter("fuel")}>
            Fuel🛢️
          </Button>
        </nav>
      </aside>
      <main className="flex-1 p-6">
        <div className="mb-6 flex items-center justify-between">
          <div className="text-2xl font-bold">💵Expense💸Tracker💰</div>
          <Button>Add Expense</Button>
        </div>
        <div className="mb-6 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
          <Card>
            <CardHeader>
              <CardTitle>Total Expenses</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-4xl font-bold">${totalExpenses.toFixed(2)}</div>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Recent Expenses</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="space-y-2">
                {filteredExpenses.slice(0, 3).map((expense) => (
                  <li key={expense.id} className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <div className="text-sm text-muted-foreground">{expense.date}</div>
                      <div className="font-medium">{expense.description}</div>
                    </div>
                    <div className="font-medium">${expense.amount.toFixed(2)}</div>
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
        </div>
        <Card>
          <CardHeader>
            <CardTitle>All Expenses</CardTitle>
          </CardHeader>
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Date</TableHead>
                  <TableHead>Description</TableHead>
                  <TableHead>Amount</TableHead>
                  <TableHead>Category</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {filteredExpenses.map((expense) => (
                  <TableRow key={expense.id}>
                    <TableCell>{expense.date}</TableCell>
                    <TableCell>{expense.description}</TableCell>
                    <TableCell>${expense.amount.toFixed(2)}</TableCell>
                    <TableCell>{expense.category}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </CardContent>
        </Card>
      </main>
    </div>
  )
}
